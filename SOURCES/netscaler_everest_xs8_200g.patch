Add 50G/100G/200G ethtool link modes

This is a patch specifically for NetScaler's Everest platform.

The standard 50G/100G/200G link modes do not fit within the 4.19 kernel ABI so
we had to drop 3 of them to squeeze the rest into the available space.

The three missing link modes are:
  ETHTOOL_LINK_MODE_50000baseLR_ER_FR_Full_BIT
  ETHTOOL_LINK_MODE_100000baseLR2_ER2_FR2_Full_BIT
  ETHTOOL_LINK_MODE_200000baseLR4_ER4_FR4_Full_BIT

These modes are meant for longer distances (up to 10 km) and it is unlikely
that customers would be using them in a datacenter.

Additionally the Mellanox firmware does not differentiate between these link
modes and other similar ones. One can see in the out of tree drivers that the
MLX5E_50GAUI_1_LAUI_1_50GBASE_CR_KR network card register treats multiple 50G
link modes exactly the same including ETHTOOL_LINK_MODE_50000baseSR_Full_BIT
and ETHTOOL_LINK_MODE_50000baseLR_ER_FR_Full_BIT so missing out the latter
does not impact functionality.

One implication of this patch is that the enums associated with the new link
modes are different to those defined in newer kernels
ETHTOOL_LINK_MODE_100000baseKR2_Full_BIT is 56 instead of 57 for example.

This patch requires matching changes in the ethtool userspace tool and the out
of tree mellanox-mlnxen driver.

diff --git a/include/uapi/linux/ethtool.h b/include/uapi/linux/ethtool.h
index dc69391d2bba..acf24f9d1d4d 100644
--- a/include/uapi/linux/ethtool.h
+++ b/include/uapi/linux/ethtool.h
@@ -1458,6 +1458,19 @@ enum ethtool_link_mode_bit_indices {
 	ETHTOOL_LINK_MODE_FEC_RS_BIT	= 50,
 	ETHTOOL_LINK_MODE_FEC_BASER_BIT	= 51,
 
+	ETHTOOL_LINK_MODE_50000baseKR_Full_BIT		 = 52,
+	ETHTOOL_LINK_MODE_50000baseSR_Full_BIT		 = 53,
+	ETHTOOL_LINK_MODE_50000baseCR_Full_BIT		 = 54,
+	ETHTOOL_LINK_MODE_50000baseDR_Full_BIT		 = 55,
+	ETHTOOL_LINK_MODE_100000baseKR2_Full_BIT	 = 56,
+	ETHTOOL_LINK_MODE_100000baseSR2_Full_BIT	 = 57,
+	ETHTOOL_LINK_MODE_100000baseCR2_Full_BIT	 = 58,
+	ETHTOOL_LINK_MODE_100000baseDR2_Full_BIT	 = 59,
+	ETHTOOL_LINK_MODE_200000baseKR4_Full_BIT	 = 60,
+	ETHTOOL_LINK_MODE_200000baseSR4_Full_BIT	 = 61,
+	ETHTOOL_LINK_MODE_200000baseDR4_Full_BIT	 = 62,
+	ETHTOOL_LINK_MODE_200000baseCR4_Full_BIT	 = 63,
+
 	/* Last allowed bit for __ETHTOOL_LINK_MODE_LEGACY_MASK is bit
 	 * 31. Please do NOT define any SUPPORTED_* or ADVERTISED_*
 	 * macro for bits > 31. The only way to use indices > 31 is to
@@ -1465,7 +1478,12 @@ enum ethtool_link_mode_bit_indices {
 	 */
 
 	__ETHTOOL_LINK_MODE_LAST
+#ifdef __GENKSYMS__
 	  = ETHTOOL_LINK_MODE_FEC_BASER_BIT,
+#else
+	  = ETHTOOL_LINK_MODE_200000baseCR4_Full_BIT,
+	  /* kABI: room exists only up to bit 63 */
+#endif
 };
 
 #define __ETHTOOL_LINK_MODE_LEGACY_MASK(base_name)	\
@@ -1573,6 +1591,7 @@ enum ethtool_link_mode_bit_indices {
 #define SPEED_50000		50000
 #define SPEED_56000		56000
 #define SPEED_100000		100000
+#define SPEED_200000		200000
 
 #define SPEED_UNKNOWN		-1
 
